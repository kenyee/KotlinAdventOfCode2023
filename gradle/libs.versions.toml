[versions]
detekt = "1.22.0"
dokka = "1.9.10"
kotlin = "1.9.21"
coroutines = "1.6.4"
retrofit = "2.5.0"
okhttp = "4.12.0"
jackson = "2.9.8"
compose-jb = "1.5.11"
circuit = "0.16.1"
composeCompiler = "1.5.4"
ktor = "1.6.8"
strikt = "0.34.0"
dependencyAnalysisPlugin = "1.20.0"
koverPlugin = "0.7.4"
versionsPlugin = "0.46.0"
ktlint = "1.0.1"
slf4j = "2.0.9"

[libraries]
gradle-tooling-api = { module = "org.gradle:gradle-tooling-api", version = "8.0.2" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-cli = { module = "org.jetbrains.kotlinx:kotlinx-cli-jvm", version = "0.3.5" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.7.0-Beta" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging", version = "1.6.22" }
kotlin-stdlib-jdk8= { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
junit = { module = "junit:junit", version = "4.13.1" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.6.0" }
kotlin-serialization-yaml = { module = "com.charleskorn.kaml:kaml", version = "0.53.0" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-kotlin-serialization-adapter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version = "1.0.0" }
retrofit-kotlin-coroutines-adapter = { module = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter", version = "0.9.2" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
freemarker = { module = "org.freemarker:freemarker", version = "2.3.28" }
jsoup= { module = "org.jsoup:jsoup", version = "1.15.3" }
commons-io = { module = "commons-io:commons-io", version = "2.6" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version = "3.8.1" }
commons-text = { module = "org.apache.commons:commons-text", version = "1.7" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version = "1.8.0" }
circuit-foundation = { module = "com.slack.circuit:circuit-foundation", version.ref="circuit" }
circuit-runtime-ui = { module = "com.slack.circuit:circuit-runtime-ui", version.ref="circuit" }
circuit-test = { module = "com.slack.circuit:circuit-test", version.ref="circuit" }
circuit-overlay = { module = "com.slack.circuit:circuit-overlay", version.ref="circuit" }
circuit-retained = { module = "com.slack.circuit:circuit-retained", version.ref="circuit" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeCompiler" }
compose-ui-text-desktop = { module = "org.jetbrains.compose.ui:ui-text-desktop", version.ref = "compose-jb" }
compose-runtime-desktop = { module = "org.jetbrains.compose.runtime:runtime-desktop", version.ref = "compose-jb" }
compose-material3-desktop = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose-jb" }
compose-foundation-desktop = { module = "org.jetbrains.compose.foundation:foundation-desktop", version.ref = "compose-jb" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref="ktor"}
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref="ktor"}
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref="ktor"}
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp"}
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp"}
system-lambda = { module = "com.github.stefanbirkner:system-lambda", version = "1.2.1" }
strikt-core = { module = "io.strikt:strikt-core", version.ref = "strikt" }
markdown = { module = "org.jetbrains:markdown", version = "0.5.0" }

ktlint = { module = "com.pinterest.ktlint:ktlint-cli", version.ref = "ktlint" }
ktlint-reporter-plain = { module = "com.pinterest.ktlint:ktlint-cli-reporter-plain", version.ref = "ktlint" }
ktlint-reporter-checkstyle = { module = "com.pinterest.ktlint:ktlint-cli-reporter-checkstyle", version.ref = "ktlint" }

[bundles]
circuit = [
    "circuit-foundation",
    "circuit-runtime-ui",
    "circuit-test",
    "circuit-overlay",
    "circuit-retained",
]
ktor = [
    "ktor-client-core",
    "ktor-client-java",
    "ktor-client-serialization",
]

[plugins]
compose = { id = "org.jetbrains.compose", version.ref = "compose-jb" }
dependency-analysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysisPlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover-plugin = { id = "org.jetbrains.kotlinx.kover", version.ref = "koverPlugin" }
shadow = { id = "com.github.johnrengelman.shadow", version = "7.1.2"}
versions-plugin = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }
